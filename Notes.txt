REST API

Client Server seperation:
    - client can only make requests for the server
    - server handles the requests and gives appropriate information back, either account info with history
        , processed video or public clips.


Uniform Interface:
    - Standerdise requests and responses from clients and servers, use http:

        GET: To retrieve a resource.

        POST: To create a new resource.

        PUT: To edit or update an existing resource.

        DELETE: To delete a resource.

Stateless:
    - We don't require the server to remember anything and each task is seperate such that any thread can pick
      up any task.

Caching:
    - We can have caching occur on local devices such that when they open the app they don't need to make a request
      everytime.

Server:
    
    Machine Learning Component:
    
    - PUT request for uploading video file.
    - GET request for getting data back.
    - For machine learning component we take a video which then we process into the video 
      format which then can be fed into the ml model.
    - We then take the video we have created and send a highlight which [int,int] of when 
      the fastest smash was in seconds with then a int of how fast it was. We can also return 
      a percentage of how long someone is in a certain area. and that can return a dictionary.

    Clips Component:

    Firebase is where the db will be held or AWS and videos

    - GET request and it will go into db to access the video and it will then upload.
    
    Match History Component:

    - PUT request into api and api will send to firebase and upload it with all its other data.
    - GET request retreiving the data.